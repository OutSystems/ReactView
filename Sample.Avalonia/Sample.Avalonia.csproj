<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>$(DotnetVersion)</TargetFramework>
    <RollForward>LatestMajor</RollForward>
    <Configurations>Debug;Release;ReleaseAvalonia;ReleaseWPF</Configurations>
    <RuntimeIdentifiers>osx-x64;win-x64;osx-arm64;win-arm64</RuntimeIdentifiers>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'ReleaseAvalonia' Or '$(Configuration)' == 'ReleaseWPF'">
    <WP_DevTool>false</WP_DevTool>
    <WP_UseCache>false</WP_UseCache>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="App.xaml" />
    <None Remove="MainView\Tasks.png" />
    <None Remove="MainWindow.xaml" />
    <None Remove="Users\User1.png" />
    <None Remove="Users\User2.png" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="App.xaml" />
    <EmbeddedResource Include="MainView\Tasks.png" />
    <EmbeddedResource Include="MainWindow.xaml" />
    <EmbeddedResource Include="Users\User1.png" />
    <EmbeddedResource Include="Users\User2.png" />
  </ItemGroup>

  <ItemGroup>
    <DefaultStyleSheet Include="Styles\LightTheme.scss" />
    <DefaultStyleSheet Include="Styles\DarkTheme.scss" />
  </ItemGroup>
    
  <ItemGroup>
    <PackageReference Include="Avalonia.Desktop" />
    <PackageReference Include="Avalonia.ReactiveUI" />
    <PackageReference Include="NLog" />
    <PackageReference Include="ViewGenerator">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="ViewGeneratorCore">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="WebViewControl-Avalonia$(WebViewPackageSuffix)" />
  </ItemGroup>
  
  <ItemGroup>
    <ProjectReference Include="..\ReactViewControl.Avalonia\ReactViewControl.Avalonia.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Content Update="tsconfig.json">
      <Visible>True</Visible>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <None Update="ts2lang.json">
      <Visible>True</Visible>
    </None>
  </ItemGroup>

  <Target Name="GenerateWebpackDevServerScript" AfterTargets="Build" Condition="'$(Configuration)' == 'Debug' And '$(OS)' == 'Windows_NT'">
    <PropertyGroup>
      <BatchScript>
@echo off
set VIEW_GENERATOR_PATH=$(PkgViewGenerator)
set VIEW_PACKER_PATH=$(PkgViewPacker)

node "%VIEW_PACKER_PATH%\tools\node_modules\webpack-dev-server\bin\webpack-dev-server.js" --config="%VIEW_GENERATOR_PATH%\tools\webpack\webpack_views.config.js" --mode=development --devtool=inline-source-map --env forHotReload=true --env useCache=false --env assemblyName="Sample.Avalonia" --env optimizeBundle=true --static-directory "$(ProjectDir)" --static-public-path "/Sample.Avalonia/"
      </BatchScript>
    </PropertyGroup>
    <WriteLinesToFile File="$(ProjectDir)RunWebpackDevServer.bat" Overwrite="true" Lines="$(BatchScript)" />
  </Target>
  
  <Target Name="GenerateWebpackDevServerShellScript" AfterTargets="Build" Condition="'$(Configuration)' == 'Debug' And '$(OS)' != 'Windows_NT'">
    <PropertyGroup>
      <WebpackDevServerScriptName>RunWebpackDevServer.sh</WebpackDevServerScriptName>
      <WebpackDevServerScriptPath>$(ProjectDir)$(WebpackDevServerScriptName)</WebpackDevServerScriptPath>
      <ShellScript>
#! /bin/bash
VIEW_GENERATOR_PATH=$(PkgViewGenerator)
VIEW_PACKER_PATH=$(PkgViewPacker)

node "$VIEW_PACKER_PATH/tools/node_modules/webpack-dev-server/bin/webpack-dev-server.js" --config="$VIEW_GENERATOR_PATH/tools/webpack/webpack_views.config.js" --mode=development --devtool=inline-source-map --env forHotReload=true --env useCache=false --env assemblyName="Sample.Avalonia" --env optimizeBundle=true --static-directory "$(ProjectDir)" --static-public-path "/Sample.Avalonia/"
      </ShellScript>
    </PropertyGroup>
    <WriteLinesToFile File="$(WebpackDevServerScriptPath)" Overwrite="true" Lines="$(ShellScript)" />
    <Exec Condition="Exists('$(WebpackDevServerScriptPath)')" Command="chmod 755 $(WebpackDevServerScriptPath)" />
  </Target>
</Project>
